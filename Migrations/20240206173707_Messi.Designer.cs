// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoCafe.Data;

#nullable disable

namespace ProjetoCafe.Migrations
{
    [DbContext(typeof(CafeDBContext))]
    [Migration("20240206173707_Messi")]
    partial class Messi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetoCafe.Models.AdicionalModel", b =>
                {
                    b.Property<int>("AdicionalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdicionalID"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("AdicionalID")
                        .HasName("pk_adicional");

                    b.ToTable("tb_adicionais", (string)null);

                    b.HasData(
                        new
                        {
                            AdicionalID = 1,
                            Descricao = "Chantilly",
                            Valor = 3.9m
                        },
                        new
                        {
                            AdicionalID = 2,
                            Descricao = "Ovo",
                            Valor = 1m
                        });
                });

            modelBuilder.Entity("ProjetoCafe.Models.ClienteModel", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteID"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("char(11)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Telefone")
                        .HasColumnType("char(11)");

                    b.HasKey("ClienteID")
                        .HasName("pk_cliente");

                    b.ToTable("tb_clientes", (string)null);

                    b.HasData(
                        new
                        {
                            ClienteID = 1,
                            CPF = "11122233345",
                            Email = "leonardo@example.com",
                            Nome = "Leonardo",
                            Telefone = "41912332112"
                        },
                        new
                        {
                            ClienteID = 2,
                            CPF = "33322211154",
                            Email = "guilherme@example.com",
                            Nome = "Guilherme",
                            Telefone = "41998765432"
                        });
                });

            modelBuilder.Entity("ProjetoCafe.Models.ComandaModel", b =>
                {
                    b.Property<int>("ComandaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComandaID"));

                    b.Property<bool>("EstaAberta")
                        .HasColumnType("bit");

                    b.Property<int?>("Mesa")
                        .HasColumnType("int");

                    b.Property<int>("NumeroComanda")
                        .HasColumnType("int");

                    b.HasKey("ComandaID")
                        .HasName("pk_comanda");

                    b.ToTable("tb_comandas", (string)null);

                    b.HasData(
                        new
                        {
                            ComandaID = 1,
                            EstaAberta = true,
                            NumeroComanda = 1
                        },
                        new
                        {
                            ComandaID = 2,
                            EstaAberta = false,
                            Mesa = 1,
                            NumeroComanda = 2
                        });
                });

            modelBuilder.Entity("ProjetoCafe.Models.CupomClienteModel", b =>
                {
                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<int>("NotaFiscalID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataGeracao")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataValidade")
                        .HasColumnType("date");

                    b.Property<bool>("Valido")
                        .HasColumnType("bit");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("ClienteID", "NotaFiscalID")
                        .HasName("pk_cupom_cliente");

                    b.HasIndex("NotaFiscalID")
                        .IsUnique();

                    b.ToTable("tb_cupons_cliente", (string)null);

                    b.HasData(
                        new
                        {
                            ClienteID = 1,
                            NotaFiscalID = 1,
                            DataGeracao = new DateTime(2024, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataValidade = new DateTime(2024, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valido = true,
                            Valor = 10m
                        });
                });

            modelBuilder.Entity("ProjetoCafe.Models.FormaPagamentoModel", b =>
                {
                    b.Property<int>("FormaPagamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormaPagamentoID"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("FormaPagamentoID")
                        .HasName("pk_forma_pagamento");

                    b.ToTable("tb_formas_pagamento", (string)null);

                    b.HasData(
                        new
                        {
                            FormaPagamentoID = 1,
                            Descricao = "Pix"
                        },
                        new
                        {
                            FormaPagamentoID = 2,
                            Descricao = "Debito"
                        });
                });

            modelBuilder.Entity("ProjetoCafe.Models.FuncionarioModel", b =>
                {
                    b.Property<int>("FuncionarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FuncionarioID"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.HasKey("FuncionarioID")
                        .HasName("pk_funcionario");

                    b.ToTable("tb_funcionarios", (string)null);

                    b.HasData(
                        new
                        {
                            FuncionarioID = 1,
                            Nome = "Pedro"
                        },
                        new
                        {
                            FuncionarioID = 2,
                            Nome = "Andre"
                        });
                });

            modelBuilder.Entity("ProjetoCafe.Models.ItemModel", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemID"));

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Tamanho")
                        .HasColumnType("char(1)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("ItemID")
                        .HasName("pk_item");

                    b.ToTable("tb_itens", (string)null);

                    b.HasData(
                        new
                        {
                            ItemID = 1,
                            Nome = "Cappuccino",
                            Tamanho = "M",
                            Valor = 10.9m
                        },
                        new
                        {
                            ItemID = 2,
                            Nome = "Cafe Expresso",
                            Tamanho = "P",
                            Valor = 7.5m
                        });
                });

            modelBuilder.Entity("ProjetoCafe.Models.NotaFiscalModel", b =>
                {
                    b.Property<int>("NotaFiscalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotaFiscalID"));

                    b.Property<int>("ComandaID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataHoraCriacao")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("FormaPagamentoID")
                        .HasColumnType("int");

                    b.Property<bool>("TaxaServico")
                        .HasColumnType("bit");

                    b.Property<decimal>("ValorFinal")
                        .HasColumnType("decimal(7,2)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("NotaFiscalID")
                        .HasName("pk_nota_fiscal");

                    b.HasIndex("ComandaID")
                        .IsUnique();

                    b.HasIndex("FormaPagamentoID");

                    b.ToTable("tb_notas_fiscais", (string)null);

                    b.HasData(
                        new
                        {
                            NotaFiscalID = 1,
                            ComandaID = 2,
                            DataHoraCriacao = new DateTime(2024, 2, 6, 14, 37, 6, 778, DateTimeKind.Local).AddTicks(6154),
                            Desconto = 0m,
                            FormaPagamentoID = 2,
                            TaxaServico = false,
                            ValorFinal = 14.8m,
                            ValorTotal = 14.8m
                        });
                });

            modelBuilder.Entity("ProjetoCafe.Models.PedidoAdicionalModel", b =>
                {
                    b.Property<int>("PedidoID")
                        .HasColumnType("int");

                    b.Property<int>("AdicionalID")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("PedidoID", "AdicionalID")
                        .HasName("pk_pedido_adicional");

                    b.HasIndex("AdicionalID");

                    b.ToTable("tb_pedido_adicionais", (string)null);

                    b.HasData(
                        new
                        {
                            PedidoID = 1,
                            AdicionalID = 1,
                            Quantidade = 1
                        });
                });

            modelBuilder.Entity("ProjetoCafe.Models.PedidoItemModel", b =>
                {
                    b.Property<int>("PedidoID")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(70)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("PedidoID", "ItemID")
                        .HasName("pk_pedido_item");

                    b.HasIndex("ItemID");

                    b.ToTable("tb_pedido_itens", (string)null);

                    b.HasData(
                        new
                        {
                            PedidoID = 1,
                            ItemID = 1,
                            Quantidade = 1
                        });
                });

            modelBuilder.Entity("ProjetoCafe.Models.PedidoModel", b =>
                {
                    b.Property<int>("PedidoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoID"));

                    b.Property<int>("ComandaID")
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioID")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("HoraFeito")
                        .HasColumnType("time(0)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("PedidoID")
                        .HasName("pk_pedido");

                    b.HasIndex("ComandaID");

                    b.HasIndex("FuncionarioID");

                    b.ToTable("tb_pedidos", (string)null);

                    b.HasData(
                        new
                        {
                            PedidoID = 1,
                            ComandaID = 2,
                            FuncionarioID = 1,
                            HoraFeito = new TimeOnly(13, 37, 20),
                            ValorTotal = 14.8m
                        });
                });

            modelBuilder.Entity("ProjetoCafe.Models.CupomClienteModel", b =>
                {
                    b.HasOne("ProjetoCafe.Models.ClienteModel", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoCafe.Models.NotaFiscalModel", "NotaFiscal")
                        .WithMany()
                        .HasForeignKey("NotaFiscalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("NotaFiscal");
                });

            modelBuilder.Entity("ProjetoCafe.Models.NotaFiscalModel", b =>
                {
                    b.HasOne("ProjetoCafe.Models.ComandaModel", "Comanda")
                        .WithMany()
                        .HasForeignKey("ComandaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoCafe.Models.FormaPagamentoModel", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comanda");

                    b.Navigation("FormaPagamento");
                });

            modelBuilder.Entity("ProjetoCafe.Models.PedidoAdicionalModel", b =>
                {
                    b.HasOne("ProjetoCafe.Models.AdicionalModel", "Adicional")
                        .WithMany()
                        .HasForeignKey("AdicionalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoCafe.Models.PedidoModel", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adicional");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("ProjetoCafe.Models.PedidoItemModel", b =>
                {
                    b.HasOne("ProjetoCafe.Models.ItemModel", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoCafe.Models.PedidoModel", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("ProjetoCafe.Models.PedidoModel", b =>
                {
                    b.HasOne("ProjetoCafe.Models.ComandaModel", "Comanda")
                        .WithMany()
                        .HasForeignKey("ComandaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoCafe.Models.FuncionarioModel", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comanda");

                    b.Navigation("Funcionario");
                });
#pragma warning restore 612, 618
        }
    }
}
